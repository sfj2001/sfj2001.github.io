<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NEEPU 课程资料</title>
  
  
  <link href="https://sfj2001.github.io/atom.xml" rel="self"/>
  
  <link href="https://sfj2001.github.io/"/>
  <updated>2023-10-18T05:30:04.231Z</updated>
  <id>https://sfj2001.github.io/</id>
  
  <author>
    <name>JinYu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>学习资料分享</title>
    <link href="https://sfj2001.github.io/2023/10/18/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%88%86%E4%BA%AB/"/>
    <id>https://sfj2001.github.io/2023/10/18/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E5%88%86%E4%BA%AB/</id>
    <published>2023-10-18T03:11:56.000Z</published>
    <updated>2023-10-18T05:30:04.231Z</updated>
    
    <content type="html"><![CDATA[<p><a href="/text/%E8%80%83%E8%AF%95%E8%B5%84%E6%96%99.rar">学习资料</a></p>]]></content>
    
    
    <summary type="html">学习资料</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第六章作业思路分享</title>
    <link href="https://sfj2001.github.io/2023/10/18/%E7%AC%AC%E5%85%AD%E7%AB%A0%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/"/>
    <id>https://sfj2001.github.io/2023/10/18/%E7%AC%AC%E5%85%AD%E7%AB%A0%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/</id>
    <published>2023-10-18T01:15:12.000Z</published>
    <updated>2023-10-18T06:13:03.360Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-写在前面"><a href="#0-写在前面" class="headerlink" title="0 写在前面"></a>0 写在前面</h2><h3 id="状态空间法的意义"><a href="#状态空间法的意义" class="headerlink" title="状态空间法的意义"></a>状态空间法的意义</h3><p>对于一个含有储能元件的网络而言，已有的研究方法是：列写多个微分方程并通过KVL和KCL，最终推导出<strong>一个高阶微分方程</strong>，再进行求解。<br>对高阶微分方程的求解，通常有两种途径：</p><ul><li>利用高等数学求解高阶微分方程的方法，确定网络的时域解；</li><li>利用拉普拉斯变换的方法，把高阶微分方程变换成线性方程，待求得具体的频域解后，再利用拉式反变换求解出时域解。</li></ul><p>本质上，两种方法只是对高阶微分方程的求解；在每次求解过程中，只能解出一个变量的时域解。其他变量的时域解，需要再列写同等阶数的高阶微分方程，才能求得。</p><p>基于高阶微分方程法的缺陷，结合《矩阵分析》的有关知识，提出了状态空间法。状态空间法将我们关心的物理量（中的几乎全部）取作状态变量中的元素。此后，基于系统中各组分间的物理约束（对于电路而言就是KVL和KCL）列出状态方程；最终，通过求解矩阵指数函数就能够将电路的零输入响应的时域解表达出来。</p><h3 id="了解更多："><a href="#了解更多：" class="headerlink" title="了解更多："></a>了解更多：</h3><p><a href="(https://zhuanlan.zhihu.com/p/114516587)">线性系统理论（一）状态空间描述</a></p><h2 id="1-前置知识"><a href="#1-前置知识" class="headerlink" title="1 前置知识"></a>1 前置知识</h2><ul><li>独立储能元件与网络复杂度阶数</li><li>状态方程的一般形式</li><li>化无穷矩阵级数为有穷矩阵级数的方法</li></ul><details class="default" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>点击查看更多 </summary>              <div class='content'>              <p class='h3' id="1-1-网络复杂度阶数"><a href="#1-1-网络复杂度阶数" class="headerlink" title="1.1 网络复杂度阶数"></a>1.1 网络复杂度阶数</h3><p>对于一个含储能元件的电路而言，根据储能元件数目与独立储能元件数目是否相等,电路可分成：</p><ul><li>常态网络(储能元件数 &#x3D; 独立储能元件数目)</li><li>非常态网络</li></ul><p class='h4' id="1-1-1-独立储能元件的概念"><a href="#1-1-1-独立储能元件的概念" class="headerlink" title="1.1.1 独立储能元件的概念"></a>1.1.1 独立储能元件的概念</h4><p>判断储能元件是否独立需要依托：</p><ul><li>纯电感割集</li><li>纯电容回路</li></ul><p>另外，还需要一点《线性代数》的知识。</p><p>如下图所示，左侧为纯电容回路，右侧为纯电感割集。<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_1.png"                      alt="alt "                ></p><p>在纯电容回路和纯电感割集中，显然有：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_1.png"                      alt="alt "                ></p><p>显然，若确定方程中两个未知量为<strong>基底</strong>，另外一个未知量可以被线性表示。换句话说：该方程相当于是两个n维向量的内积；一个是未知数向量，一个是数值向量。数值向量的秩是1，未知数向量的维数应当是n-1维（对应到这里就是2维）。<br>通过以上的说明，复现出一个问题：增加一个纯电容回路或纯电感割集，就会相应地“剥夺”一个储能元件独立储能元件的地位；该储能元件的电源或电流就能够由外电路唯一确定。</p><p>由此，我们说明完了独立储能元件的概念</p><h4 id="1-1-2-网络复杂度阶数"><a href="#1-1-2-网络复杂度阶数" class="headerlink" title="1.1.2 网络复杂度阶数"></a>1.1.2 网络复杂度阶数</h4><p>网络复杂度阶数描述的是一个网络中独立储能元件的数目，显然，网络复杂度阶数&#x3D;储能元件数目-纯电容回路数-纯电感割集数。</p><p>统计纯电容回路数的方法：</p><ul><li>将网络中非电压源、电容的其他元件全部开路</li><li>统计剩下的基本回路数（对于平面网络，基本回路数就是网孔数）</li></ul><p>统计纯电感割集的方法是类似的，即：</p><ul><li>将非电感和电流源的其他元件短路</li><li>统计剩下的基本割集数</li></ul><h3 id="1-2-状态方程的一般形式"><a href="#1-2-状态方程的一般形式" class="headerlink" title="1.2 状态方程的一般形式"></a>1.2 状态方程的一般形式</h3><p>如图为状态方程的一般形式：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_2.png"                      alt="alt "                ><br>其中，x表示状态变量；x（是列向量）其中元素的数目等于网络复杂度阶数。u表示输入向量；在电网络中，输入向量数目等于网络中电源的数目。<br>特别地，对于非常态网络，其状态方程表达如下：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_3.png"                      alt="alt "                ></p><h3 id="1-3-化无穷矩阵级数为有穷矩阵级数的方法"><a href="#1-3-化无穷矩阵级数为有穷矩阵级数的方法" class="headerlink" title="1.3 化无穷矩阵级数为有穷矩阵级数的方法"></a>1.3 化无穷矩阵级数为有穷矩阵级数的方法</h3><h4 id="1-3-1-由矩阵的最小多项式所确定的基"><a href="#1-3-1-由矩阵的最小多项式所确定的基" class="headerlink" title="1.3.1 由矩阵的最小多项式所确定的基"></a>1.3.1 由矩阵的最小多项式所确定的基</h4><p>对于任何一个矩阵，均可以求得其最小多项式：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_4.png"                      alt="alt "                ></p><p>根据凯莱-哈密尔顿定理：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_5.png"                      alt="alt "                ><br>（特别地，该矩阵的特征多项式也满足上述方程。）</p><p>由此，可以找到一组基表示任意n阶及以上阶数的矩阵，且表示式的系数唯一；为了说明方便，这里取基为：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_6.png"                      alt="alt "                ></p><h4 id="1-3-2-无穷矩阵级数的退化"><a href="#1-3-2-无穷矩阵级数的退化" class="headerlink" title="1.3.2 无穷矩阵级数的退化"></a>1.3.2 无穷矩阵级数的退化</h4><p>对于一个可以展开成无穷级数的矩阵函数，以麦克劳林公式为例：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_7.png"                      alt="alt "                ><br>通过1.3.1中确定的一组基：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_6.png"                      alt="alt "                ><br>麦克劳林公式随即由无穷级数退化为有穷级数，不妨记为：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_8.png"                      alt="alt "                ></p><p>自此，我们实现了化无穷矩阵级数为有穷矩阵级数。现在的问题仅限于如何求解表达式的系数了。</p><h3 id="1-3-3-有穷级数系数的确定"><a href="#1-3-3-有穷级数系数的确定" class="headerlink" title="1.3.3 有穷级数系数的确定"></a>1.3.3 有穷级数系数的确定</h3><p>根据凯莱-哈密尔顿定理，将矩阵的特征值带入有穷级数；也满足该方程。</p><p>显然有：<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_9.png"                      alt="alt "                ><br>由此，我们将表示式的系数唯一确定了。</p><div class="note default"><p>这里实际上只给出了矩阵特征值无重根的情形。<br>对于矩阵特征值出现重根的情况，我们应当将下式子，对特征值求导生成一个新的方程。<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit6/knowleage_equ_8.png"                      alt="alt "                ></p></div>              </div>            </details>  <h2 id="2-解题思路"><a href="#2-解题思路" class="headerlink" title="2 解题思路"></a>2 解题思路</h2><h3 id="2-1-列写状态方程的基本步骤"><a href="#2-1-列写状态方程的基本步骤" class="headerlink" title="2.1 列写状态方程的基本步骤"></a>2.1 列写状态方程的基本步骤</h3><h4 id="2-1-1-确定网络复杂度阶数"><a href="#2-1-1-确定网络复杂度阶数" class="headerlink" title="2.1.1 确定网络复杂度阶数"></a>2.1.1 确定网络复杂度阶数</h4><p>确定网络复杂度阶数的目的是为了确定状态变量x中元素的数目。状态变量中x的元素就能够因此而确定。</p><p>正如前文所述，网络复杂度阶数表征了状态空间中元素的数目。<br>一般地，对于常态网络而言，网络复杂度阶数就是储能元件数目；因此，把全部电容电压和电感电流取为状态变量中的元素就完成了状态变量的取定。<br>特殊地，对于非常态网络而言，网络复杂度阶数小于储能元件数目；因此，总有一些电容电压或电感电流是不能取为状态变量中的元素的。此种情况下，应根据纯电容回路和纯电感割集确定究竟是哪些电容电压和电感电流具备成为状态变量中元素的“资格”。正如1.1.1 独立储能元件的概念所阐明的那样，只有独立储能元件才能够成为网络中的状态变量。</p><h4 id="2-1-2-确定网络的规范树"><a href="#2-1-2-确定网络的规范树" class="headerlink" title="2.1.2 确定网络的规范树"></a>2.1.2 确定网络的规范树</h4><p>所谓规范树，其本质上就是一个树。树的概念在第二章图论的相关理论中被提出；指的是连接全部节点的不构成封闭图的最大的支路集合。<br>规范，是我们所要选取的这个树的定语，也暗示着取树的规则。在列写状态方程的过程中，取定树支的优先级是：</p><ul><li>电压源</li><li>电容</li><li>电阻</li><li>电感</li><li>电流源</li></ul><p>此外，还应注意：</p><ul><li>状态变量中所取定的电容，必须作为树支；</li><li>状态变量中所取定的电感，必须作为连支。</li></ul><p>由此，基于以上原则，我们取定了网络的规范树。</p><h4 id="2-1-3-做规范树的基本割集和基本回路并列写方程"><a href="#2-1-3-做规范树的基本割集和基本回路并列写方程" class="headerlink" title="2.1.3 做规范树的基本割集和基本回路并列写方程"></a>2.1.3 做规范树的基本割集和基本回路并列写方程</h4><p>割集，本质上就是一个广义的节点；电容的电压作为状态变量，其电流应满足基本割集电流方程；类似地，电感所在支路的电感电压应满足基本回路的电压方程。</p><p>通过列写电容树支的基本割集电流方程、电感所在连支的基本回路电压方程，从形式上，该方程组已经基本具备了状态方程的雏形；已经是导数与变量的线性方程组。</p><p>对于常态网络，第三步的工作已经基本完成，可以进入到第四步的工作中；但对于非常态网络，我们需要补充方程，将非独立储能元件的电压或电流的导数用独立储能元件的电压或电流的导数、输入变量的电压或电流的倒数线性表示出来。</p><p>至此，我们推导出了“准状态方程”。</p><h4 id="2-1-4-消去方程中的中间变量"><a href="#2-1-4-消去方程中的中间变量" class="headerlink" title="2.1.4 消去方程中的中间变量"></a>2.1.4 消去方程中的中间变量</h4><p>状态方程最终是状态变量的导数被状态变量与输入变量（及其导数）线性表示的形式；在上一步骤中，“准状态方程”中非状态变量、输入变量（及其导数）的中间变量。为了将“准状态方程”升级为状态方程，我们需要利用网络的KCL、KVL以及电阻的VCR（欧姆定律）将中间变量消去。</p><h4 id="2-1-5-整理"><a href="#2-1-5-整理" class="headerlink" title="2.1.5 整理"></a>2.1.5 整理</h4><p>将状态方程整理成矩阵形式</p><h3 id="2-2-用待定系数法确定矩阵指数函数"><a href="#2-2-用待定系数法确定矩阵指数函数" class="headerlink" title="2.2 用待定系数法确定矩阵指数函数"></a>2.2 用待定系数法确定矩阵指数函数</h3><p>在前置知识中，我们说明了化无穷矩阵级数为有穷矩阵级数的方法；实际上，对于矩阵指数函数，其本身也可以写成无穷级数的形式。利用前置知识中的内容，我们就能够确定出矩阵指数函数。</p>]]></content>
    
    
    <summary type="html">本文主要介绍了网络复杂度阶数、状态方程的列写、矩阵指数函数的求解</summary>
    
    
    
    
    <category term="电网络" scheme="https://sfj2001.github.io/tags/%E7%94%B5%E7%BD%91%E7%BB%9C/"/>
    
    <category term="作业思路分享" scheme="https://sfj2001.github.io/tags/%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>第三章习题</title>
    <link href="https://sfj2001.github.io/2023/09/26/%E7%AC%AC%E4%B8%89%E7%AB%A0%E4%B9%A0%E9%A2%98/"/>
    <id>https://sfj2001.github.io/2023/09/26/%E7%AC%AC%E4%B8%89%E7%AB%A0%E4%B9%A0%E9%A2%98/</id>
    <published>2023-09-26T00:58:39.000Z</published>
    <updated>2023-09-26T02:41:34.577Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计算题1"><a href="#计算题1" class="headerlink" title="计算题1"></a>计算题1</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q1.png"                      alt="alt "                ></p><h3 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h3><p>由期望定义：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q1_solve_1.png"                      alt="alt "                ></p><details class="dufult" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>期望的计算： 点击查看更多 </summary>              <div class='content'>                            </div>            </details><h3 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q1_solve_2.png"                      alt="alt "                ></p><details class="dufult" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>期望的计算： 点击查看更多 </summary>              <div class='content'>                            </div>            </details><h3 id="讨论广义平稳性"><a href="#讨论广义平稳性" class="headerlink" title="讨论广义平稳性"></a>讨论广义平稳性</h3><p>依据：</p><ul><li>Y的期望是一个常数</li><li>Y的相关函数与变量t无关</li></ul><p>说明：Y具有广义平稳性</p><h2 id="计算题2"><a href="#计算题2" class="headerlink" title="计算题2"></a>计算题2</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q2.png"                      alt="alt "                ></p><h3 id="计算Z的自相关函数"><a href="#计算Z的自相关函数" class="headerlink" title="计算Z的自相关函数"></a>计算Z的自相关函数</h3><p>由自相关函数的定义：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q2_solve_1.png"                      alt="alt "                ></p><h3 id="计算W的自相关函数"><a href="#计算W的自相关函数" class="headerlink" title="计算W的自相关函数"></a>计算W的自相关函数</h3><p>类似地</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q2_solve_2.png"                      alt="alt "                ></p><h3 id="计算Z和W的互相关函数"><a href="#计算Z和W的互相关函数" class="headerlink" title="计算Z和W的互相关函数"></a>计算Z和W的互相关函数</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q2_solve_3.png"                      alt="alt "                ></p><h2 id="计算题4"><a href="#计算题4" class="headerlink" title="计算题4"></a>计算题4</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q4.png"                      alt="alt "                ></p><h3 id="均值"><a href="#均值" class="headerlink" title="均值"></a>均值</h3><p>由A、X、Y两两独立，</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q4_solve_1.png"                      alt="alt "                ></p><p>考虑自相关函数的性质：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q4_solve_2.png"                      alt="alt "                ></p><p>显然：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q4_solve_3.png"                      alt="alt "                ></p><h3 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h3><p>由方差计算公式：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q4_solve_4.png"                      alt="alt "                ></p><p>其中，</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q4_solve_5.png"                      alt="alt "                ></p><p>显然</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q4_solve_6.png"                      alt="alt "                ></p><h3 id="自相关函数"><a href="#自相关函数" class="headerlink" title="自相关函数"></a>自相关函数</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/randm/homework/q4_solve_7.png"                      alt="alt "                ></p><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2>]]></content>
    
    
    <summary type="html">第三章习题（计算题）的解法</summary>
    
    
    
    
    <category term="随机过程" scheme="https://sfj2001.github.io/tags/%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>电网络例题</title>
    <link href="https://sfj2001.github.io/2023/09/23/%E7%94%B5%E7%BD%91%E7%BB%9C%E4%BE%8B%E9%A2%98/"/>
    <id>https://sfj2001.github.io/2023/09/23/%E7%94%B5%E7%BD%91%E7%BB%9C%E4%BE%8B%E9%A2%98/</id>
    <published>2023-09-23T01:00:00.000Z</published>
    <updated>2023-09-25T13:26:06.445Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目1-生成A、Bf、Qf阵"><a href="#题目1-生成A、Bf、Qf阵" class="headerlink" title="题目1 生成A、Bf、Qf阵"></a>题目1 生成A、Bf、Qf阵</h2><p>如图,为一个有向图，请按照先树枝后连支的顺序,列写A、Bf、Qf阵<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example.png"                      alt="alt "                ></p><!-- 题目一答案（折叠） --><details class="dufult" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>参考答案： 点击查看更多 </summary>              <div class='content'>              <p class='h3' id="step1-确定树支"><a href="#step1-确定树支" class="headerlink" title="step1:确定树支"></a>step1:确定树支</h3><p>如图确定红色支路为树支<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example_tree.png"                      alt="alt "                ></p><h3 id="step2-确定A阵"><a href="#step2-确定A阵" class="headerlink" title="step2:确定A阵"></a>step2:确定A阵</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/q1-A.png"                      alt="alt "                ></p><h3 id="step3-确定Bf阵"><a href="#step3-确定Bf阵" class="headerlink" title="step3:确定Bf阵"></a>step3:确定Bf阵</h3><p class='h4' id="方法1-公式法"><a href="#方法1-公式法" class="headerlink" title="方法1 公式法"></a>方法1 公式法</h4><p>由公式<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/q1-equal-1.png"                      alt="alt "                ></p><h4 id="方法2-观察法（定义法）"><a href="#方法2-观察法（定义法）" class="headerlink" title="方法2 观察法（定义法）"></a>方法2 观察法（定义法）</h4><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/q1-Bf.png"                      alt="alt "                ></p><h3 id="step4-确定Qf阵"><a href="#step4-确定Qf阵" class="headerlink" title="step4:确定Qf阵"></a>step4:确定Qf阵</h3><h4 id="方法1-公式法-1"><a href="#方法1-公式法-1" class="headerlink" title="方法1 公式法"></a>方法1 公式法</h4><p>由公式</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/q1-equal-2.png"                      alt="alt "                ></p><h4 id="方法2-观察法-定义法"><a href="#方法2-观察法-定义法" class="headerlink" title="方法2 观察法(定义法)"></a>方法2 观察法(定义法)</h4><p>如图为基本割集</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example_gj.png"                      alt="alt "                ></p><p>由上图可以确定Qf阵</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/q1-Qf.png"                      alt="alt "                ></p><div class="note default"><p>显然从手算角度，从定义法出发，列写Bf阵更为简单</p></div>              </div>            </details><h2 id="题目2-计算题"><a href="#题目2-计算题" class="headerlink" title="题目2 计算题"></a>题目2 计算题</h2><p>如图，各元件参数均在图中给出</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2.png"                      alt="alt "                ></p><ul><li>列写A、Yb、In、Ibs、Yn阵</li><li>以节点7为参考节点，建立节点5、6的<ul><li>（重点）诺顿等值电路，给出参数并绘制电路图</li><li>戴维南等值电路，给出参数并绘制电路图</li></ul></li><li>用分裂法，求各节点电压<ul><li>（重点）切割支路电流</li><li>切割回路电流</li></ul></li></ul><!-- 题目二答案（折叠） --><details class="dufult" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>参考答案： 点击查看更多 </summary>              <div class='content'>              <p class='h3' id="step1-确定树支及列写矩阵"><a href="#step1-确定树支及列写矩阵" class="headerlink" title="step1:确定树支及列写矩阵"></a>step1:确定树支及列写矩阵</h3><p>树支及支路如图标注所示：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_1.png"                      alt="alt "                ></p><p>由此，建立节点-支路关联矩阵A</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_2.png"                      alt="alt "                ></p><p>并建立节点导纳矩阵</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_3.png"                      alt="alt "                ></p><p>确定In矩阵</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_4.png"                      alt="alt "                ></p><p>确定Ibs矩阵</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_5.png"                      alt="alt "                ></p><p>由公式确定Yn</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_6.png"                      alt="alt "                ></p><h3 id="step2-诺顿等值"><a href="#step2-诺顿等值" class="headerlink" title="step2:诺顿等值"></a>step2:诺顿等值</h3><p>为表达方便，这里将矩阵分为Y11、Y12、Y21、Y22四块，如图所示：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_7.png"                      alt="alt "                ></p><p>诺顿等效后的节点电压方程</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_8.png"                      alt="alt "                ></p><h3 id="step3-切割支路电流"><a href="#step3-切割支路电流" class="headerlink" title="step3: 切割支路电流"></a>step3: 切割支路电流</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/example/example2_solve_9.png"                      alt="alt "                ></p><p class='h2' id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h2>              </div>            </details>]]></content>
    
    
    <summary type="html">本文主要介绍了几道例题及对应的做题过程</summary>
    
    
    
    
    <category term="电网络" scheme="https://sfj2001.github.io/tags/%E7%94%B5%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>第五章作业思路分享</title>
    <link href="https://sfj2001.github.io/2023/09/20/%E7%AC%AC%E4%BA%94%E7%AB%A0%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/"/>
    <id>https://sfj2001.github.io/2023/09/20/%E7%AC%AC%E4%BA%94%E7%AB%A0%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/</id>
    <published>2023-09-20T00:18:48.000Z</published>
    <updated>2023-10-18T02:25:48.333Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前置知识"><a href="#1-前置知识" class="headerlink" title="1 前置知识"></a>1 前置知识</h2><ul><li>分裂法与网路变动</li><li>补偿定理</li></ul><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>分裂法与网络变动</p></div><div class="notel-content"><p>对于由几个简单网络通过几条简单支路连接成的一个复杂网络，实际上，节点阻抗矩阵（按网络分块后）除主对角线元素以外，在非主对角线上还存在几个元素。</p><blockquote><p>这几个元素<strong>数目并不多</strong>却使得矩阵求逆的工程量变得相对较大。</p></blockquote><p>如果应用网路变动的思想（主要是补偿定理），将待求的网络理解成几个简单网络增加了几条支路；并应用补偿定理，就能够将一个相对复杂高阶矩阵的求逆运算，转变成几个低阶相对简单矩阵的求逆运算过程，简化了求解运算的复杂程度。</p></div></div><details class="dufult" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>补偿定理： 点击查看更多 </summary>              <div class='content'>              <div class="note default"><p>这里实际上并不要求掌握</p></div><p>已知矩阵方程如下，要求X</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/bc-3.png"                      alt="alt "                ></p><p>对于矩阵A</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/bc-1.png"                      alt="alt "                ></p><p>由此矩阵方程可变为：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/bc-4.png"                      alt="alt "                ></p><p>其中A矩阵的变化量可分解为</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/bc-2.png"                      alt="alt "                ></p><p>则有</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/bc-5.png"                      alt="alt "                ></p><p>令<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/bc-6.png"                      alt="alt "                ></p><p>则有</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/bc-7.png"                      alt="alt "                ></p><p>此后求解X的过程，就可以应用高斯消去法（对矩阵进行初等行变换变行阶梯，进而化成行最简）求解X</p>              </div>            </details><p>通过补偿定理的知识，分裂法可用如下矩阵进行数学描述</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/solve-1.png"                      alt="alt "                ></p><h2 id="2-解题思路"><a href="#2-解题思路" class="headerlink" title="2 解题思路"></a>2 解题思路</h2><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>生成Yn(0)</p></div><div class="notel-content"><p>实际上，按网络分块后，Yn0中每一个子块都是相同的二阶矩阵<br><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/solve-2.png"                      alt="alt "                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/solve-3.png"                      alt="alt "                ></p></div></div><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>生成A阵</p></div><div class="notel-content"><p>A阵中元素的正负实际上与有向支路的方向有关；正如<a class="button " href='https://sfj2001.github.io/2023/09/19/%E3%80%8A%E7%94%B5%E7%BD%91%E7%BB%9C%E3%80%8B%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/' title='第二章'>第二章</a>所讨论的那样</p><blockquote><p>支路10、11、12上的电流方向是任意取定的，这里我们取由节点编号较小的流向节点编号较大的。</p></blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit5/solve-4.png"                      alt="alt "                ></p></div></div><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>高斯消去</p></div><div class="notel-content"><ul><li>通过将待求矩阵化成行阶梯型，先求解支路电流</li><li>将支路电流带入，最终求得各节点电压</li></ul></div></div><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>附加说明</p></div><div class="notel-content"><p>分裂法不仅只有分裂支路电流的情况，回路电流、割集的相关参数都可以予以分裂。</p><p>从手算角度，也许分裂法过于繁琐；但从工程实际角度分析，通过繁琐的步骤，能够减小一次计算的存储容量；在一定算力的情况下，给分析大型网络提供了可能。</p></div></div><h2 id="3-程序"><a href="#3-程序" class="headerlink" title="3 程序"></a>3 程序</h2><p>为了验证手算结果的准确性，笔者基于Matlab编写了程序用以验证。</p><p><a href="/code/power_network/unit5_text.m">点这里下载程序</a></p>]]></content>
    
    
    <summary type="html">本文主要介绍了补偿定理、分裂法、例题的解题思路及其对应的Matlab程序</summary>
    
    
    
    
    <category term="电网络" scheme="https://sfj2001.github.io/tags/%E7%94%B5%E7%BD%91%E7%BB%9C/"/>
    
    <category term="作业思路分享" scheme="https://sfj2001.github.io/tags/%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>第四章作业思路分享</title>
    <link href="https://sfj2001.github.io/2023/09/19/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/"/>
    <id>https://sfj2001.github.io/2023/09/19/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/</id>
    <published>2023-09-19T12:59:00.000Z</published>
    <updated>2023-09-23T00:15:51.545Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-前置知识（支路追加法）"><a href="#1-前置知识（支路追加法）" class="headerlink" title="1 前置知识（支路追加法）"></a>1 前置知识（支路追加法）</h3><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>Step-1：追加树支</p></div><div class="notel-content"><ul><li>在参考节点上，追加树支；只有自阻抗位置元素是新增的阻抗值，其余位置元素都是<code>0</code></li><li>在非参考节点上，追加树支<ul><li>自阻抗位置元素为被追加节点自阻抗与新增阻抗值的和</li><li>新增行、列其余位置元素，与被追加支路与其他节点的互阻抗相同</li></ul></li></ul><details class="default" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>Folding 如此追加树支的原因： 点击查看更多 </summary>              <div class='content'>              <div class="note default"><p>这里实际上并不要求掌握</p></div> <p>从节点阻抗矩阵的的定义出发，考虑追加树枝网络的拓扑结构</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit4/add_branch.jpg"                      alt="alt "                ></p><p>节点阻抗矩阵各元素的定义：</p><ul><li>自阻抗：从某节点注入单位电流，在该节点测得的电压</li><li>互阻抗：从某节点注入单位电流，在其他节点测得的电压</li></ul><p>实际上，在节点i追加树支（引入节点i+1）并在节点i+1注入单位电流，<strong>对于除节点i+1以外的其他节点</strong>而言，与在节点i注入单位电流<em><strong>并没有区别</strong></em>。</p><p>因为节点i+1是通过追加的树支与网络连接的，因此，节点i+1的自阻抗是节点i的自阻抗与追加树支阻抗的和。</p>              </div>            </details></div></div><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>Step-2：追加连支</p></div><div class="notel-content"><p>方法</p><ul><li>确定<code>Am</code>阵</li><li>计算公式中相关量</li></ul><p>注意：  </p><ul><li>每次只增加一条连支</li><li>每次增加连支，节点阻抗矩阵的修正形式如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit4/with_brach.png"                      alt="alt "                ></p></div></div><h3 id="2-作业思路"><a href="#2-作业思路" class="headerlink" title="2 作业思路"></a>2 作业思路</h3><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>追加树支b2</p></div><div class="notel-content"><p>相当于从0矩阵追加树支b1，并引入节点2；矩阵如下：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit4/solve-1.png"                      alt="alt "                ></p></div></div><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>追加树支b1、b3</p></div><div class="notel-content"><blockquote><p>追加b1、b3无本质区别，这里只讨论b1的情况 </p></blockquote><p>根据追加树支的原则，b1加在了节点n2(非参考节点)上</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit4/solve-2.png"                      alt="alt "                ></p></div></div><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>追加连支b3</p></div><div class="notel-content"><blockquote><p>这里只给出了<code>A</code>阵</p></blockquote><p>特别注意：<strong>节点n2是第一个引入的</strong>，因此，A阵第一个元素应讨论<strong>n2节点与b3支路的关系</strong><br>故此，A阵如下：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/homework/unit4/solve-3.png"                      alt="alt "                ></p><p>剩下的工作就是计算追加支路后的<code>Zn</code>阵</p></div></div><div class="note-large default"><div class="notel-title"><i class="notel-icon fa-solid fa-info"></i><p>补充说明</p></div><div class="notel-content"><p>因为本题已经给定了支路追加的顺序；因此<em><strong>看起来</strong></em>支路追加法应采用“先树支后连支”的方法。<br>实际上，对于一个给定代求的网络，可能树支和连支<strong>交替追加</strong>可能求解起来更为简便。<br>这是因为：进行一次连支的追加计算，就是一个十分庞大的工程；因此趁节点阻抗矩阵阶数低的情况下，完成几个连支的追加是有利于节省储存容量、提高计算速度的。</p></div></div><h2 id="3-程序"><a href="#3-程序" class="headerlink" title="3 程序"></a>3 程序</h2><p>为了验证手算结果的准确性，笔者基于Matlab编写了程序用以验证。</p><p><a href="/code/power_network/unit4.rar">点这里下载程序</a></p>]]></content>
    
    
    <summary type="html">本文主要介绍了支路追加法、例题的解题思路及其对应的Matlab程序</summary>
    
    
    
    
    <category term="电网络" scheme="https://sfj2001.github.io/tags/%E7%94%B5%E7%BD%91%E7%BB%9C/"/>
    
    <category term="作业思路分享" scheme="https://sfj2001.github.io/tags/%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>第二章知识点总结</title>
    <link href="https://sfj2001.github.io/2023/09/19/%E3%80%8A%E7%94%B5%E7%BD%91%E7%BB%9C%E3%80%8B%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>https://sfj2001.github.io/2023/09/19/%E3%80%8A%E7%94%B5%E7%BD%91%E7%BB%9C%E3%80%8B%E7%AC%AC%E4%BA%8C%E7%AB%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</id>
    <published>2023-09-19T10:48:10.000Z</published>
    <updated>2023-09-20T12:33:07.481Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-本章的核心问题"><a href="#0-本章的核心问题" class="headerlink" title="0 本章的核心问题"></a>0 本章的核心问题</h2><ul><li><p>关联矩阵<br>（拓扑约束，反映各元件的连接方式）</p></li><li><p>一般支路<br> （元件约束，主要是元件的伏安特性）</p></li><li><p>大型网络的节点导纳矩阵如何生成</p></li><li><p><code>A</code>阵、<code>Bf</code>阵、<code>Qf</code>阵的相互转化</p></li></ul><h3 id="1-关联矩阵"><a href="#1-关联矩阵" class="headerlink" title="1 关联矩阵"></a>1 关联矩阵</h3><ul><li>节点-支路关联矩阵 <code>A</code></li><li>基本回路-支路关联矩阵 <code>Bf</code></li><li>基本割集-支路关联矩阵 <code>Qf</code></li></ul><h4 id="1-1-“有向回路”"><a href="#1-1-“有向回路”" class="headerlink" title="1.1 “有向回路”"></a>1.1 <code>“有向回路”</code></h4><p>对于一个电路而言，<code>电流的方向</code>是任意取定的；在电路图中，所取定的<code>电流的方向</code>就是该条支路的方向。</p><h4 id="1-2-节点-支路关联矩阵-A阵"><a href="#1-2-节点-支路关联矩阵-A阵" class="headerlink" title="1.2 节点-支路关联矩阵 A阵"></a>1.2 节点-支路关联矩阵 <code>A</code>阵</h4><h5 id="1-2-1-特点"><a href="#1-2-1-特点" class="headerlink" title="1.2.1 特点"></a>1.2.1 特点</h5><ul><li>行 对应 （除参考节点以外的）节点</li><li>列 对应  <code>“有向”回路</code></li><li>元素<code>a</code>只有 <code>0</code> <code>1</code> <code>-1</code> 三种取值</li><li>若节点（含参考节点）共<code>m+1</code>个、支路共<code>n</code>个，则<code>A</code>阵是<code>m</code>行<code>n</code>列的</li></ul><h5 id="1-2-2-如何生成A阵"><a href="#1-2-2-如何生成A阵" class="headerlink" title="1.2.2 如何生成A阵"></a>1.2.2 如何生成<code>A</code>阵</h5><p>为了生成<code>A</code>阵，只需：</p><ul><li>遍历节点和支路</li><li>判断节点与支路是否直接连接的关系<ul><li>支路流入节点，<code>a</code>值取-1</li><li>支路流出节点，<code>a</code>值取1</li><li>若该支路与该节点无上述关系，<code>a</code>值取0。</li></ul></li></ul><h5 id="1-2-3-举例"><a href="#1-2-3-举例" class="headerlink" title="1.2.3 举例"></a>1.2.3 举例</h5><p>支路的方向如图给定所示，以节点1为例</p><ul><li>支路<code>b1</code>流出节点，故<code>a = 1</code></li><li>支路<code>b5</code>流入节点，故<code>a = -1</code></li><li>支路<code>b4</code>流入节点，故<code>a = 1</code></li><li>其余支路与节点1不直接相连，故<code>a = 0</code></li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/knowledge/create_A.jpg"                      alt="alt 生成A阵"                ></p><blockquote><p>图中，较上位置的矩阵称为节点-支路关联矩阵的<strong>增广矩阵</strong></p></blockquote><h4 id="1-3-基本回路-支路关联矩阵-Bf阵"><a href="#1-3-基本回路-支路关联矩阵-Bf阵" class="headerlink" title="1.3 基本回路-支路关联矩阵 Bf阵"></a>1.3 基本回路-支路关联矩阵 <code>Bf</code>阵</h4><h5 id="1-3-1-树支和连支"><a href="#1-3-1-树支和连支" class="headerlink" title="1.3.1 树支和连支"></a>1.3.1 <code>树支</code>和<code>连支</code></h5><p><code>树支</code>所构成的支路集满足：</p><ul><li>能将每个节点都连在一起</li><li>再添加一条支路，电路中就有闭合回路</li></ul><p><code>连支</code>就是 <code>除了树枝以外的</code> 其他支路 </p><h5 id="1-3-1-基本回路"><a href="#1-3-1-基本回路" class="headerlink" title="1.3.1 基本回路"></a>1.3.1 <code>基本回路</code></h5><ul><li>一个<code>网孔</code>就是一个<code>基本回路</code></li><li><code>基本回路数</code>等于<code>连支数</code></li></ul><h5 id="1-3-2-Bf阵中元素的确定"><a href="#1-3-2-Bf阵中元素的确定" class="headerlink" title="1.3.2 Bf阵中元素的确定"></a>1.3.2 <code>Bf</code>阵中元素的确定</h5><ul><li>由<code>连支</code>方向确定<code>基本回路</code>的方向</li><li>遍历基本回路和支路确定<code>Bf</code>中元素<ul><li>支路与<code>基本回路</code>同向，则<code>b = 1</code></li><li>支路与<code>基本回路</code>反向，则<code>b = -1</code></li><li>支路不在<code>基本回路</code>内，则<code>b = 0</code></li></ul></li></ul><h5 id="1-3-3-举例"><a href="#1-3-3-举例" class="headerlink" title="1.3.3 举例"></a>1.3.3 举例</h5><p>支路和基本回路的方向如图给定所示，以回路<code>l1</code>为例</p><ul><li>支路<code>b1</code>与基本回路<code>l1</code>，故<code>b = -1</code></li><li>支路<code>b2</code>与基本回路<code>l1</code>，故<code>b = 1</code></li></ul><p>…</p><ul><li>支路<code>b7</code>不在基本回路<code>l1</code>内，故<code>b = 0</code></li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/knowledge/create_B.jpg"                      alt="alt 生成Bf阵"                ></p><h5 id="1-3-4-Bf阵的特点"><a href="#1-3-4-Bf阵的特点" class="headerlink" title="1.3.4 Bf阵的特点"></a>1.3.4 <code>Bf</code>阵的特点</h5><p>将<code>Bf</code>阵中的<strong>列向量</strong>按照<strong>树支在前，连支在后</strong>的原则排列，则有：</p><p><strong>基本回路与连支的矩阵是单位阵</strong></p><h4 id="1-4-基本割集-支路关联矩阵-Qf阵"><a href="#1-4-基本割集-支路关联矩阵-Qf阵" class="headerlink" title="1.4 基本割集-支路关联矩阵 Qf阵"></a>1.4 基本割集-支路关联矩阵 <code>Qf</code>阵</h4><h5 id="1-4-1-基本割集"><a href="#1-4-1-基本割集" class="headerlink" title="1.4.1 基本割集"></a>1.4.1 基本割集</h5><p>只切割一条<code>树支</code>，就能将一个<code>图</code>分成两个开放的<code>图</code>；这种切割方法能划分出基本割集。</p><h5 id="1-4-2-支路相对割集的方向"><a href="#1-4-2-支路相对割集的方向" class="headerlink" title="1.4.2 支路相对割集的方向"></a>1.4.2 支路相对割集的方向</h5><p><strong>把标记<code>支路</code>方向的箭头，全部挪到“割线”的一侧，再确定支路相对<code>割集</code>的方向。</strong></p><h5 id="1-4-3-Qf阵中元素的确定"><a href="#1-4-3-Qf阵中元素的确定" class="headerlink" title="1.4.3 Qf阵中元素的确定"></a>1.4.3 <code>Qf</code>阵中元素的确定</h5><ul><li>若<code>支路</code>与<code>树支</code>相对割集的方向<strong>相同</strong>，则<code>b = 1</code></li><li>若<code>支路</code>与<code>树支</code>相对割集的方向<strong>相反</strong>，则<code>b = 1</code></li><li>若支路与割集无关，则<code>b = 0</code></li></ul><h5 id="1-4-4-举例"><a href="#1-4-4-举例" class="headerlink" title="1.4.4 举例"></a>1.4.4 举例</h5><p>割集的分法、支路的方向如图给定所示，以割集为例</p><ul><li>支路<code>b1</code>与树支<code>b1</code>方向相同，故<code>q = 1</code></li></ul><p>…</p><ul><li>支路<code>b4</code>与树支<code>b1</code>方向相同，故<code>q = 0</code></li></ul><p>…</p><ul><li>支路<code>b7</code>与割集无关，故<code>q = 0</code></li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/knowledge/create_C.jpg"                      alt="alt 生成Qf阵"                ></p><h5 id="1-4-5-Qf阵的特点"><a href="#1-4-5-Qf阵的特点" class="headerlink" title="1.4.5 Qf阵的特点"></a>1.4.5 <code>Qf</code>阵的特点</h5><p>将<code>Qf</code>阵中的<strong>列向量</strong>按照<strong>树支在前，连支在后</strong>的原则排列，则有：</p><p><strong>割集与树支的矩阵是单位阵</strong></p><h3 id="2-一般支路"><a href="#2-一般支路" class="headerlink" title="2 一般支路"></a>2 一般支路</h3><ul><li>包含受控源的一般支路</li><li>不含受控源的一般支路</li></ul><p>注：含受控源的一般支路，并不在本文讨论范围之内；若你有学习需求，可以上网或联系作者。</p><h4 id="2-1-一般支路的拓扑"><a href="#2-1-一般支路的拓扑" class="headerlink" title="2.1 一般支路的拓扑"></a>2.1 一般支路的拓扑</h4><p>一般支路中，包含</p><ul><li>阻抗</li><li>电流源</li><li>电压源</li></ul><p>如图为一般支路各物理量的标号及正方向约定</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/knowledge/nomal_branch.jpg"                      alt="alt 一般支路"                ></p><blockquote><p>其中，阻抗的伏安特性起着：联系电压与电流两个不同物理量的重要作用。</p></blockquote><h4 id="2-2-一般支路的方程"><a href="#2-2-一般支路的方程" class="headerlink" title="2.2 一般支路的方程"></a>2.2 一般支路的方程</h4><p>根据伏安特性，列出一般支路的方程如下</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="/image/knowledge/fc.png"                      alt="alt 一般支路的方程"                ></p><p>这个方程是从单一支路推广到多个支路的。</p><ul><li>从单一支路角度看，物理量的列向量“坍塌”成一个物理量；</li><li>从多个支路角度看，物理量的列向量是由一个一个一般支路组合在一起形成的。</li></ul><h3 id="3-上述理论的应用————生成大型网络的节点导纳矩阵Y阵"><a href="#3-上述理论的应用————生成大型网络的节点导纳矩阵Y阵" class="headerlink" title="3 上述理论的应用————生成大型网络的节点导纳矩阵Y阵"></a>3 上述理论的应用————生成大型网络的节点导纳矩阵<code>Y</code>阵</h3><h4 id="3-1-KCL和KVL的矩阵形式"><a href="#3-1-KCL和KVL的矩阵形式" class="headerlink" title="3.1 KCL和KVL的矩阵形式"></a>3.1 KCL和KVL的矩阵形式</h4><h5 id="3-1-1-KCL的矩阵形式"><a href="#3-1-1-KCL的矩阵形式" class="headerlink" title="3.1.1 KCL的矩阵形式"></a>3.1.1 KCL的矩阵形式</h5><h5 id="3-1-2-KVL的矩阵形式"><a href="#3-1-2-KVL的矩阵形式" class="headerlink" title="3.1.2 KVL的矩阵形式"></a>3.1.2 KVL的矩阵形式</h5><h4 id="3-2-用A阵和Yb阵生成节点导纳矩阵"><a href="#3-2-用A阵和Yb阵生成节点导纳矩阵" class="headerlink" title="3.2 用A阵和Yb阵生成节点导纳矩阵"></a>3.2 用A阵和Yb阵生成节点导纳矩阵</h4>]]></content>
    
    
    <summary type="html">本文主要介绍了电网络第二章主要知识点</summary>
    
    
    
    
    <category term="电网络" scheme="https://sfj2001.github.io/tags/%E7%94%B5%E7%BD%91%E7%BB%9C/"/>
    
    <category term="学习笔记" scheme="https://sfj2001.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>招募编辑</title>
    <link href="https://sfj2001.github.io/2023/09/19/%E6%8B%9B%E5%8B%9F%E7%BC%96%E8%BE%91/"/>
    <id>https://sfj2001.github.io/2023/09/19/%E6%8B%9B%E5%8B%9F%E7%BC%96%E8%BE%91/</id>
    <published>2023-09-19T04:30:21.000Z</published>
    <updated>2023-09-20T02:52:17.997Z</updated>
    
    <content type="html"><![CDATA[<h3 id="招募要求"><a href="#招募要求" class="headerlink" title="招募要求"></a>招募要求</h3><ul><li>学习或使用过markdown编写md文件</li><li>了解github的使用</li><li>看懂了<a class="link"   href="https://redefine-docs.ohevan.com/modules" >文档1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>和<a class="link"   href="https://redefine-docs.ohevan.com/tips" >文档2 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li><li>能接受目前没有报酬</li></ul><h3 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h3><p>在网站主页点击邮箱，与作者取得联系</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;招募要求&quot;&gt;&lt;a href=&quot;#招募要求&quot; class=&quot;headerlink&quot; title=&quot;招募要求&quot;&gt;&lt;/a&gt;招募要求&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;学习或使用过markdown编写md文件&lt;/li&gt;
&lt;li&gt;了解github的使用&lt;/li&gt;
&lt;li&gt;看懂了&lt;a</summary>
      
    
    
    
    
    <category term="招募" scheme="https://sfj2001.github.io/tags/%E6%8B%9B%E5%8B%9F/"/>
    
  </entry>
  
</feed>
